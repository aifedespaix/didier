// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file welcome.proto (package protocol, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Welcome is sent by the server after a Join message.
 *
 * @generated from message protocol.Welcome
 */
export class Welcome extends Message<Welcome> {
  /**
   * Version of the welcome schema.
   *
   * @generated from field: uint32 version = 1;
   */
  version = 0;

  /**
   * Identifier assigned to the player by the server.
   *
   * @generated from field: uint32 player_id = 2;
   */
  playerId = 0;

  constructor(data?: PartialMessage<Welcome>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "protocol.Welcome";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "player_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Welcome {
    return new Welcome().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Welcome {
    return new Welcome().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Welcome {
    return new Welcome().fromJsonString(jsonString, options);
  }

  static equals(a: Welcome | PlainMessage<Welcome> | undefined, b: Welcome | PlainMessage<Welcome> | undefined): boolean {
    return proto3.util.equals(Welcome, a, b);
  }
}

